{"version":3,"sources":["components/Navbar.js","components/Register.js","components/Login.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","class","href","id","Component","Register","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","email","password","errors","handleInputChange","bind","assertThisInitialized","handleSubmit","e","preventDefault","validateForm","console","log","setState","defineProperty","target","value","formIsValid","className","style","marginTop","width","marginBottom","onSubmit","method","action","type","placeholder","onChange","Login","user","Home","App","BrowserRouter","components_Navbar","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.75897bcf.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Navbar extends Component{\n    render(){\n        return(\n            <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <a class=\"navbar-brand\" href=\"#\">Redux Auth</a>\n            <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul class=\"navbar-nav ml-auto\">\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"/\">Home</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"/register\">Register</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"login\">Login</a>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n        )\n    }\n}\nexport default Navbar;","import React, {Component} from 'react';\n\nclass Register extends Component{\n\n    constructor(){\n        super();\n        this.state = {\n            name:'',\n            email:'',\n            password:'',\n            errors: {}\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleSubmit(e){\n        e.preventDefault();\n        if (this.validateForm()) {\n        const user = {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password\n        }\n        \n    }\n    console.log(this.state);\n}\n\n    handleInputChange(e){\n        this.setState({\n            [e.target.name]:e.target.value\n        })\n    }\n\n    validateForm(){\n        let errors ={};\n        let formIsValid = true;\n        if(!this.state.name){\n            formIsValid = false;\n            errors[\"name\"] = \"*Please enter your name.\";\n        }\n        if (!this.state.email) {\n            formIsValid = false;\n            errors[\"emailid\"] = \"*Please enter your email-ID.\";\n          }\n    \n         \n          if (!this.state.password) {\n            formIsValid = false;\n            errors[\"password\"] = \"*Please enter your password.\";\n          }\n    \n          \n    \n          this.setState({\n            errors: errors\n          });\n          return formIsValid;\n    \n    \n    }\n    render() {\n        return(\n        <div className=\"container\" style={{ marginTop: '50px', width: '700px'}}>\n            <h2 style={{marginBottom: '40px'}}>Registration</h2>\n            <form onSubmit={ this.handleSubmit } method=\"post\" action=\"/api/users/register\" >\n                <div className=\"form-group\">\n                    <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    className=\"form-control\"\n                    name=\"name\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.name }\n                    />\n                     <div className=\"errorMsg\">{this.state.errors[\"name\"]}</div>\n                </div>\n                <div className=\"form-group\">\n                    <input\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.email }\n                    />\n                     <div className=\"errorMsg\">{this.state.errors[\"emailid\"]}</div>\n                </div>\n                <div className=\"form-group\">\n                    <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.password }\n                    />\n                    <div className=\"errorMsg\">{this.state.errors[\"password\"]}</div>\n                </div>\n                <div className=\"form-group\">\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        Register User\n                    </button>\n                </div>\n            </form>\n        </div>\n        )\n    }\n}\nexport default Register;","import React, { Component } from 'react';\n\nclass Login extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            email: '',\n            password: '',\n            errors: {}\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const user = {\n            email: this.state.email,\n            password: this.state.password,\n        }\n        console.log(user);\n    }\n\n    render() {\n        return(\n        <div className=\"container\" style={{ marginTop: '50px', width: '700px'}}>\n            <h2 style={{marginBottom: '40px'}}>Login</h2>\n            <form onSubmit={ this.handleSubmit }>\n                <div className=\"form-group\">\n                    <input\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.email }\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.password }\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        Login User\n                    </button>\n                </div>\n            </form>\n        </div>\n        )\n    }\n}\n\nexport default Login;","import React, { Component } from 'react';\n\nexport default class Home extends Component {\n    render() {\n        return (\n            <div>\n                Home Component\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\n\nimport Navbar from './components/Navbar';\nimport Register from './components/Register';\nimport Login from './components/Login';\nimport Home from './components/Home';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nclass App extends Component {\n  render(){\n    return(\n       <Router>\n         <div>\n           <Navbar />\n           <Route exact path=\"/\" component={ Home } />\n              <div className=\"container\">\n                <Route exact path=\"/register\" component={ Register } />\n                <Route exact path=\"/login\" component={ Login } />\n              </div>> \n         </div>\n       </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}